
Процедура ОбработкаПроведения(Отказ, Режим)
	
	// 1. получаем тч докмента
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Расход.Склад КАК Склад,
	|	РасходТовары.Номенклатура КАК Номенклатура,
	|	СУММА(РасходТовары.Количество) КАК Количество,
	|	Расход.Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	&Период КАК Период
	|ИЗ
	|	Документ.Расход.Товары КАК РасходТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Расход КАК Расход
	|		ПО РасходТовары.Ссылка = Расход.Ссылка
	|ГДЕ
	|	Расход.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	Расход.Склад,
	|	РасходТовары.Номенклатура,
	|	Расход.Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Период", ЭтотОбъект.Дата);
	
	Результат = Запрос.Выполнить();
	тз = Результат.Выгрузить();
	
	// 2. На этом шаге часто чтение из регистров для последующих проверок и далее запись ...
	//.........
	
	// 2.1. Чтобы данные не менялись - их блокируем для фиксации итогов между чтением и записью в рамках одной транзакции
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.ИсточникДанных = тз;
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Склад", "Склад");
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();
	Запрос = Новый Запрос;
	
	// 2.1. Чтение и сравнение чего то там ....  (необязательный) - 
	// .............
	
	// 2.2. Запишем расход в регистр (именно так работает типовое решение а не через ЭтотОбъект.Движения) - разница в том что каждый РН контролируется отдельно.
	ЭтотОбъект.ДополнительныеСвойства.Вставить("ТоварыНаСкладах", тз);
	НЗ = РегистрыНакопления.ТоварыНаСкладах.СоздатьНаборЗаписей();
	НЗ.Отбор.Регистратор.Установить(ЭтотОбъект.Ссылка);
	НЗ.Загрузить(тз);
	НЗ.Записать();
	
	// 3. Контролируем отриц остатки - если ушли по регистру в минус - то выполняем отказ проведения.
	Запрос = Новый Запрос;
	Запрос.Текст =
	
	// 3.1. запросом выводим строки док которые оказались отрицательными в регистре после движений по нему из п.2.2
	"ВЫБРАТЬ
	|	тз.Склад КАК Склад,
	|	тз.Номенклатура КАК Номенклатура,
	|	тз.Количество КАК Количество
	|ПОМЕСТИТЬ вт_товары
	|ИЗ
	|	&тз КАК тз
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыНаСкладахОстатки.Склад КАК Склад,
	|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
	|ИЗ
	|	вт_товары КАК вт_товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	|				,
	|				Склад = &Склад
	|					И Номенклатура В
	|						(ВЫБРАТЬ различные
	|							т.Номенклатура
	|						ИЗ
	|							вт_товары КАК т)) КАК ТоварыНаСкладахОстатки
	|		ПО вт_товары.Склад = ТоварыНаСкладахОстатки.Склад
	|			И вт_товары.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	|ГДЕ
	|	ТоварыНаСкладахОстатки.КоличествоОстаток < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыНаСкладахОстатки.Номенклатура,
	|	ТоварыНаСкладахОстатки.Склад";
	
	Запрос.УстановитьПараметр("тз", тз);
	Запрос.УстановитьПараметр("Склад", ЭтотОбъект.Склад);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Отказ = НЕ Результат.Пустой();
	
	Пока Выборка.Следующий() Цикл
		Сообщить("Не хватает товара:"+Выборка.Номенклатура+", кол:"+Выборка.КоличествоОстаток);
	КонецЦикла;	
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Документы.Расход.ЭтоСервер();
	// Вставить содержимое обработчика.
КонецПроцедуры
